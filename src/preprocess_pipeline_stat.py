import numpy as np

import pandas as pd

from sklearn.preprocessing import RobustScaler



CONFIG ={
    
    'clip_by_value':[
                     {'name':'','min':0,'max':2},
                    {'name':'SizeOfInitializedData','min':-1e9,'max':5},{"name":"SizeOfUninitializedData",'min':-1e9, 'max':5},
                     {'name':'SizeOfInitializedData','min':-1e9,'max':5},{'name':'AddressOfEntryPoint', 'min':-1e9,'max':5},
                     {'name':'BaseOfCode','min':-1e9,'max':5},{'name':'BaseOfData','min':-1e9,'max':5},{'name':'BaseOfCode','min':-1e9,'max':5},{'name':'ImageBase','min':-1e9,'max':5},
                     {'name':'SectionAlignment','min':-1e9,'max':5},
                     {'name':'FileAlignment','min':-1e9,'max':6000},{'name':'MinorOperatingSystemVersion','min':-1e9,'max':6000},
                     {'name':'MajorImageVersion','min':-1e9,'max':10000},  {'name':'MinorSubsystemVersion','min':-1e9,'max':2000},
                     {'name':'SizeOfImage','min':-1e9,'max':5}, {'name':'CheckSum','min':-1e9,'max':20},
                     {'name':'SizeOfStackReserve','min':-1e9,'max':10}, {'name':'SizeOfStackCommit','min':-1e9,'max':1000},
                     {'name':'LoaderFlags','min':-1e9,'max':10},  {'name':'NumberOfRvaAndSizes','min':-1e9,'max':10}
    ],
    'all_scaler':RobustScaler()
}

def prepare_transform(X : pd.DataFrame):
    
    Y=X.copy()
    for clip_f in CONFIG['clip_by_value']:
   
        Y[clip_f['name']] = Y[clip_f['name']].clip(clip_f['min'], clip_f['max'])
        
    
    transforms = RobustScaler().fit(Y)
    
    return transforms

def transform_data(X, transforms):
    Y=X.copy()
    for clip_f in CONFIG['clip_by_value']:
        Y[clip_f['name']] = Y[clip_f['name']].clip(clip_f['min'], clip_f['max'])
    Y = pd.DataFrame(transforms.transform(Y), columns=Y.columns)
    return Y
    